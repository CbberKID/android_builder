name: android_build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - id: get-project
        name: Get project name
        run: echo "PROJECT=$(cat project-to-build)" >> $GITHUB_OUTPUT

      - name: Clone project
        run: git clone --depth=1 ${{ steps.get-project.outputs.PROJECT }} project

      - name: Install Android SDK 34
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools: 34.0.0
          ndk: false

      - name: Build the app
        working-directory: ./project
        run: |
          # 预生成 gradlew 文件并赋予权限
          touch gradlew && chmod +x gradlew

          # 强制升级 Gradle 到兼容版本
          ./gradlew wrapper --gradle-version 8.2 --distribution-type bin

          # 动态替换 AGP 版本（修复引号问题）
          sed -i "s/com\.android\.tools\.build:gradle:[^']*/com.android.tools.build:gradle:8.2.0\"/g" build.gradle

          # 调试：验证 AGP 版本替换和权限
          echo "=== 检查 AGP 版本 ==="
          grep 'com.android.tools.build:gradle' build.gradle
          echo "=== 检查 gradlew 权限 ==="
          ls -l gradlew

          # 添加 Gradle 内存优化配置
          echo "org.gradle.jvmargs=-Xmx2048m" >> gradle.properties

          # 执行构建（移除冲突参数）
          ./gradlew assembleDebug --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: my-build-apk
          path: ./project/app/build/outputs/apk/**/*.apk
